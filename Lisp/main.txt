; ✓ we want structures (dictionaries)
; ✓ we want d̶o̶t̶ accessors
; we want labeled parameters
; we want variadic args
; we want w̶i̶n̶d̶o̶w̶i̶n̶g̶ ̶g̶r̶a̶p̶h̶i̶c̶s̶ terminal interface library
; *     we want reactivity

(def dog {
    name: "Bob"
    age: 10 
})

(def p (lambda (&stuff)
     (let item (first stuff))
     (let other (rest stuff))
     (print item)
     (if (not (empty? other))
         (apply p other))))
     
(debug)

(p 1 2 3 '(4)) ; 1 2 3 '(4)
(apply p 1 2 3 '(4 5 6 '(7))) ; 1 2 3 4 5 6 '(7)

(def fib (lambda (n)
  (switch ((= n 0) 0)
          ((= n 1) 1)
          (else (+ (fib (- n 1))
                   (fib (- n 2)))))))

(print (get dog 'name))

(def struct {
    a: "a"
    b: "b"
    test: (lambda (data) (print data))
    another-test: {
        just-one-more-test: (lambda () (print "ok, this is crazy"))}})
        
((get struct 'another-test 'just-one-more-test))

(debug)